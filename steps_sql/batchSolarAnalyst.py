# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# large_area_solar_radiation.py
# Created on: 2014-03-08 13:55:02.00000
#   (generated by ArcGIS/ModelBuilder)
# Description: Generate solar radiation tiles for all areas in a shapefile
# ---------------------------------------------------------------------------

# Pseudo Code!
# For eachPolygon in Shapefile:
#   bufferedPollygon = buffer polygon by bufferAmount
#   set extent env to bufferedPolygon
#   outputRaster = AreaSolarRadiation(rasterDataset)
#   clippedOutput = clip outputRaster back to polygon size
#   write clippedOutput file to designated directory?


# "Calculate solar radiation over a very large area by using a Raster Dataset and using a shapefile of polygons to choose which areas
# to use as extents when calculating areas for. 
# Also accepts a buffer size which will be applied to each polygon for use in the extent. 
# The final image output will be clipped back to the size of the input polygon

# DEM states
# -3 -- errors encountered
# -2 -- areas calculated to have no tiles within 100m
# -1 -- square has no intersecting lidar bboxes within 100m
# 0 -- available to process
# 1 -- reserved, but not complete
# 2 -- completed

buffersize = 50

import dbconn,sys,os,subprocess,re,tempfile,time,arcpy

# Check out any necessary licenses
arcpy.CheckOutExtension("spatial")


if len(sys.argv) != 4
    print "USAGE large_area_solar_radiation.py <workspace> <Raster Mosaic GDB> <output directory>"
    exit(-1)

env.workspace = sys.argv[1]
rasterMosaic = sys.argv[2]
outputdir = sys.argv[3]


reserveQuery = """
    UPDATE sa_fishnets dem 
    SET state=1 
    WHERE dem.id in (
        SELECT id FROM dem_fishnets WHERE state=0 
        ORDER BY ST_Distance(the_geom,ST_SetSrid(ST_MakePoint(480815.0,4979852.6),26915))
        LIMIT 1
    ) 
    RETURNING 
    id, 
    ST_XMin(the_geom) as xmin, 
    ST_YMin(the_geom) as ymin, 
    ST_XMax(the_geom) as xmax, 
    ST_YMax(the_geom) as ymax,
    ST_Y(ST_Transform(ST_CENTROID(the_geom),4326)) AS lat 
"""


# The following call is what was generated by Model Builder
# Local variables:
# DSM_4342-01-25_c_a_img = "C:\\Users\\stuporglue\\Documents\\GitHub\\solar_scripts\\arcdata\\DSM_4342-01-25_c_a.img"
# gradraster = "C:\\Users\\stuporglue\\Documents\\GitHub\\solar_scripts\\arcdata\\outputs\\gradraster"
# dradraster = "C:\\Users\\stuporglue\\Documents\\GitHub\\solar_scripts\\arcdata\\outputs\\dradraster"
# difradraster = "C:\\Users\\stuporglue\\Documents\\GitHub\\solar_scripts\\arcdata\\outputs\\difradraster"
# dirdurraster = "C:\\Users\\stuporglue\\Documents\\GitHub\\solar_scripts\\arcdata\\outputs\\dirdurraster"
# 
# AreaSolarRadiation(
#        "DSM_4342-01-25_c_a_img,       # input surface raster
#        gradraster,                    # Global radiation raster
#        "44.980436239969",             # Latitude
#        "200",                         # Sky size
#        "MultiDays   2014  120  150",  # 120 / 150 are start and end days
#        "14",                          # Day interval
#        "0.5",                         # Hour interval
#        "NOINTERVAL",                  # each interval  
#        "1",                           # z-factor
#        "FROM_DEM",                    # Slope aspect input type
#        "32",                          # Calculation directions
#        "8",                           # Zenith divisions
#        "8",                           # Azimuth divisions
#        "UNIFORM_SKY",                 # Diffuse model type
#        "0.3",                         # Diffuse proportion 
#        "0.5",                         # Transmittivity
#        dradraster,                    # direct radiation raster
#        difradraster,                  # Difuse radiation raster  
#        dirdurraster                   # Direct duration raster
#        )

# Process: Area Solar Radiation
# http://resources.arcgis.com/en/help/main/10.2/index.html#//009z000000t5000000
# AreaSolarRadiation (in_surface_raster, {latitude}, {sky_size}, {time_configuration}, {day_interval}, {hour_interval}, {each_interval}, {z_factor}, {slope_aspect_input_type}, {calculation_directions}, {zenith_divisions}, {azimuth_divisions}, {diffuse_model_type}, {diffuse_proportion}, {transmittivity}, {out_direct_radiation_raster}, {out_diffuse_radiation_raster}, {out_direct_duration_raster})

args = {
        "in_surface_raster": rasterMosaic,
        "latitude": None,
        "sky_size": 200,
        "time_configuration": 'MultiDays 2014 1 365',
        "day_interval": 14,
        "hour_interval": 0.5,
        "each_interval": 'NOINTERVAL',
        "z_factor": 1,
        "slope_aspect_input_type": 'FROM_DEM',
        "calculation_directions": 32,
        "zenith_divisions": 8,
        "azimuth_divisions": 8,
        "diffuse_model_type": 'UNIFORM_SKY',
        "diffuse_proportion": 0.3,
        "transmittivity": 0.5,
        "out_direct_radiation_raster": None,
        "out_diffuse_radiation_raster": None,
        "out_direct_duration_raster": None,
}

res = dbconn.run_query(reserveQuery).fetchall()
count = 0
average = 0;
while len(res) > 0:
    for row in res:
        count += 1
        sys.stdout.write("Running Solar Analyst for row " + str(row['id']) + "\t\t\t")
        starttime = time.time()

        # Buffer out the extent 
        bxmin = int(row['xmin']) - buffersize
        bymin = int(row['ymin']) - buffersize
        bxmax = int(row['xmax']) + buffersize
        bymax = int(row['ymax']) + buffersize

        # http://resources.arcgis.com/en/help/main/10.2/index.html#//001w00000009000000
        # ...coordinates that define the extent in the coordinate system in which the input data is stored.
        # Set the extent environment using the Extent class.
        arcpy.env.extent = arcpy.Extent(bxmin,bymin,bxmax,bymax)

        # Does this have to be in degrees, or was that just because 
        # that's how the input dataset was for my model builder test? 
        args['latitude'] = float(row['lat'])

        outputGlobalRadiationRaster = AreaSolarRadiation(**args)
        Clip_management(outputGlobalRadiationRaster,row['xmin'] + ' ' + row['ymin'] + ' ' + row['xmax'] + ' ' + row['ymax'],outputdir + '/' + row['id'] + '.img')
